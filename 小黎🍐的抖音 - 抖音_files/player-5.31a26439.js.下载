/*! For license information please see player-5.31a26439.js.LICENSE.txt */
!function(U,F){"object"==typeof exports&&"undefined"!=typeof module?F(exports):"function"==typeof define&&define.amd?define(["exports"],F):F((U="undefined"!=typeof globalThis?globalThis:U||self).xss={})}(this,function(U){"use strict";var F=function(){return(F=Object.assign||function(U){for(var F,Q=1,B=arguments.length;Q<B;Q++)for(var R in F=arguments[Q])Object.prototype.hasOwnProperty.call(F,R)&&(U[R]=F[R]);return U}).apply(this,arguments)};function Q(U,F,Q){if(Q||2==arguments.length)for(var B,R=0,V=F.length;R<V;R++)!B&&R in F||(B||(B=Array.prototype.slice.call(F,0,R)),B[R]=F[R]);return U.concat(B||Array.prototype.slice.call(F))}var B=/[^a-zA-Z0-9\\_:.-]/gim,R=/</g,V=/>/g,l=/&#([a-zA-Z0-9]*);?/gim,Z=/&quot;/g,d=/&colon;?/gim,J=/&newline;?/gim,W=/((j\s*a\s*v\s*a|v\s*b|l\s*i\s*v\s*e)\s*s\s*c\s*r\s*i\s*p\s*t\s*|m\s*o\s*c\s*h\s*a):/gi,S=/u\s*r\s*l\s*\(.*/gi,n=/e\s*x\s*p\s*r\s*e\s*s\s*s\s*i\s*o\s*n\s*\(.*/gi,E=/"/g,N=function(U){return U.replace(R,"&lt;").replace(V,"&gt;")},m={indexOf:function(U,F){var Q,B;for(Q=0,B=U.length;Q<B;Q++)if(U[Q]===F)return Q;return -1},forEach:function(U,F,Q){var B,R;for(B=0,R=U.length;B<R;B++)F.call(Q,U[B],B,U)},some:function(U,F,Q){var B,R;for(B=0,R=U.length;B<R;B++)if(F.call(Q,U[B],B,U))return!0;return!1},trim:function(U){return U.replace(/(^\s*)|(\s*$)/g,"")},includes:function(U,F){if("string"==typeof U)return -1!==U.indexOf(F);for(var Q=0;Q<U.length;Q++)if(U[Q]===F)return!0;return!1},spaceIndex:function(U){var F=/\s|\n|\t/.exec(U);return F?F.index:-1},uniq:function(U){for(var F={},Q=[],B=0;B<U.length;B++)F[U[B]]||(Q.push(U[B]),F[U[B]]=!0);return Q},from:function(U){for(var F=[],Q=0;Q<U.length;Q++)F.push(U[Q]);return F},keys:function(U){var F=[];for(var Q in U)F.push(Q);return F}};function k(U){return null==U}function c(U){var F;return'"'===(F=U)[0]&&'"'===F[F.length-1]||"'"===F[0]&&"'"===F[F.length-1]?U.substr(1,U.length-2):U}function h(U){var F,Q,B,R,V,l,Z,d="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",J="",W=0;for(U=function(U){U=U.replace(/rn/g,"n");for(var F="",Q=0;Q<U.length;Q++){var B=U.charCodeAt(Q);B<128?F+=String.fromCharCode(B):B>127&&B<2048?F+=String.fromCharCode(B>>6|192)+String.fromCharCode(63&B|128):F+=String.fromCharCode(B>>12|224)+String.fromCharCode(B>>6&63|128)+String.fromCharCode(63&B|128)}return F}(U);W<U.length;)R=(F=U.charCodeAt(W++))>>2,V=(3&F)<<4|(Q=U.charCodeAt(W++))>>4,l=(15&Q)<<2|(B=U.charCodeAt(W++))>>6,Z=63&B,isNaN(Q)?l=Z=64:isNaN(B)&&(Z=64),J=J+d.charAt(R)+d.charAt(V)+d.charAt(l)+d.charAt(Z);return J}function b(U){var F,Q,B,R,V,l,Z="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",d="",J=0;for(U=U.replace(/[^A-Za-z0-9+/=]/g,"");J<U.length;)F=Z.indexOf(U.charAt(J++))<<2|(R=Z.indexOf(U.charAt(J++)))>>4,Q=(15&R)<<4|(V=Z.indexOf(U.charAt(J++)))>>2,B=(3&V)<<6|(l=Z.indexOf(U.charAt(J++))),d+=String.fromCharCode(F),64!==V&&(d+=String.fromCharCode(Q)),64!==l&&(d+=String.fromCharCode(B));return function(U){for(var F="",Q=0,B=0,R=0,V=0;Q<U.length;)(B=U.charCodeAt(Q))<128?(F+=String.fromCharCode(B),Q++):B>191&&B<224?(F+=String.fromCharCode((31&B)<<6|63&(V=U.charCodeAt(Q+1))),Q+=2):(V=U.charCodeAt(Q+1),F+=String.fromCharCode((15&B)<<12|(63&V)<<6|63&(R=U.charCodeAt(Q+2))),Q+=3);return F}(d)}function a(U,F,Q){var B="",R=0,V=!1,l=!1,Z=0,d=U.length,J="",W="";U:for(Z=0;Z<d;Z++){var S=U.charAt(Z);if(!1===V){if("<"===S){V=Z;continue}}else if(!1===l){if("<"===S){B+=Q(U.slice(R,Z)),V=Z,R=Z;continue}if(">"===S||Z===d-1){B+=Q(U.slice(R,V)),J=function(U){var F,Q=m.spaceIndex(U);return F=-1===Q?U.slice(1,-1):U.slice(1,Q+1),"/"===(F=m.trim(F).toLowerCase()).slice(0,1)&&(F=F.slice(1)),"/"===F.slice(-1)&&(F=F.slice(0,-1)),F}(W=U.slice(V,Z+1)),B+=F(V,B.length,J,W,"</"===W.slice(0,2)),R=Z+1,V=!1;continue}if('"'===S||"'"===S)for(var n=1,E=U.charAt(Z-n);""===E.trim()||"="===E;){if("="===E){l=S;continue U}E=U.charAt(Z-++n)}}else if(S===l){l=!1;continue}}return R<d&&(B+=Q(U.substr(R))),B}function X(U,F){var Q=0,R=0,V=[],l=!1,Z=U.length;function d(U,Q){if(!((U=(U=m.trim(U)).replace(B,"").toLowerCase()).length<1)){var R=F(U,Q||"");R&&V.push(R)}}for(var J=0;J<Z;J++){var W=U.charAt(J),S=void 0;if(!1!==l||"="!==W){if(!1===l||J!==R){if(/\s|\n|\t/.test(W)){if(U=U.replace(/\s|\n|\t/g," "),!1===l){if(-1===(S=function(U,F){for(;F<U.length;F++){var Q=U[F];if(" "!==Q)return"="===Q?F:-1}return -1}(U,J))){d(m.trim(U.slice(Q,J))),l=!1,Q=J+1;continue}J=S-1;continue}if(-1===(S=function(U,F){for(;F>0;F--){var Q=U[F];if(" "!==Q)return"="===Q?F:-1}return -1}(U,J-1))){d(l,c(m.trim(U.slice(Q,J)))),l=!1,Q=J+1;continue}}}else{if(-1===(S=U.indexOf(W,J+1)))break;d(l,m.trim(U.slice(R+1,S))),l=!1,Q=(J=S)+1}}else l=U.slice(Q,J),Q=J+1,R='"'===U.charAt(Q)||"'"===U.charAt(Q)?Q:function(U,F){for(;F<U.length;F++){var Q=U[F];if(" "!==Q)return"'"===Q||'"'===Q?F:-1}return -1}(U,J+1)}return Q<U.length&&(!1===l?d(U.slice(Q)):d(l,c(m.trim(U.slice(Q))))),m.trim(V.join(" "))}function p(U,F,Q){if(Q=function(U){return U=function(U){for(var F="",Q=0,B=U.length;Q<B;Q++)F+=32>U.charCodeAt(Q)?" ":U.charAt(Q);return m.trim(F)}(U=(U=(U=U.replace(Z,'"')).replace(l,function(U,F){return"x"===F[0]||"X"===F[0]?String.fromCharCode(parseInt(F.substr(1),16)):String.fromCharCode(parseInt(F,10))})).replace(d,":").replace(J," "))}(Q),"href"===F||"src"===F){if("#"===(Q=m.trim(Q)))return"#";if("http://"!==Q.substr(0,7)&&"https://"!==Q.substr(0,8)&&"mailto:"!==Q.substr(0,7)&&"tel:"!==Q.substr(0,4)&&"data:image/"!==Q.substr(0,11)&&"ftp://"!==Q.substr(0,6)&&"./"!==Q.substr(0,2)&&"../"!==Q.substr(0,3)&&"#"!==Q[0]&&"/"!==Q[0])return""}else if("background"===F){if(W.lastIndex=0,W.test(Q))return""}else if("style"===F&&(n.lastIndex=0,n.test(Q)||(S.lastIndex=0,S.test(Q)&&(W.lastIndex=0,W.test(Q)))))return"";return Q=function(U){return U=N(U=U.replace(E,"&quot;"))}(Q)}var C=function(U){return"string"==typeof U?U.replace(/'/g,'"').replace('=""',"").replace(/\s+/g,"").toLowerCase():""},T=function(){function U(U){var F=function(U){var F={};for(var Q in U)F[Q]=U[Q];return F}(U||{});F.stripIgnoreTag&&(F.onIgnoreTag,F.onIgnoreTag=function(){return""}),F.whiteList={},F.onTag=function(){},F.onTagAttr=function(){},F.onIgnoreTag=function(){},F.onIgnoreTagAttr=function(){},F.safeAttrValue=p,F.escapeHtml=N,this.options=Object.assign(F,U)}return U.prototype.process=function(U){if(!(U=(U=U||"").toString()))return"";var F,Q,B,R,V,l,Z=this.options,d=Z.whiteList,J=Z.onTag,W=Z.onIgnoreTag,S=Z.onTagAttr,n=Z.onIgnoreTagAttr,E=Z.safeAttrValue,N=Z.escapeHtml;Z.stripBlankChar&&(U=(F=(F=U.split("")).filter(function(U){var F=U.charCodeAt(0);return!(127===F||F<=31&&10!==F&&13!==F)})).join("")),Z.allowCommentTag||(U=function(U){for(var F="",Q=0;Q<U.length;){var B=U.indexOf("\x3c!--",Q);if(-1===B){F+=U.slice(Q);break}F+=U.slice(Q,B);var R=U.indexOf("--\x3e",B);if(-1===R)break;Q=R+3}return F}(U));var k=!1;Z.stripIgnoreTagBody&&(Q=Z.stripIgnoreTagBody,"function"!=typeof(B=W)&&(B=function(){}),R=!Array.isArray(Q),V=[],l=!1,W=(k={onIgnoreTag:function(U,F,Z){var d;if(d=U,R||-1!==m.indexOf(Q,d)){if(Z.isClosing){var J="[/removed]",W=Z.position+J.length;return V.push([!1!==l?l:Z.position,W]),l=!1,J}return l||(l=Z.position),"[removed]"}return B(U,F,Z)},remove:function(U){var F="",Q=0;return m.forEach(V,function(B){F+=U.slice(Q,B[0]),Q=B[1]}),F+=U.slice(Q)}}).onIgnoreTag);var c=a(U,function(U,F,Q,B,R){var V={sourcePosition:U,position:F,isClosing:R,isWhite:Object.prototype.hasOwnProperty.call(d,Q)},l=J(Q,B,V);if(null!=l)return l;if(V.isWhite){if(V.isClosing)return"</".concat(Q,">");var Z=function(U){var F=m.spaceIndex(U);if(-1===F)return{html:"",closing:"/"===U[U.length-2]};var Q="/"===(U=m.trim(U.slice(F+1,-1)))[U.length-1];return Q&&(U=m.trim(U.slice(0,-1))),{html:U,closing:Q}}(B),k=d[Q],c=X(Z.html,function(U,F){var B=-1!==m.indexOf(k,U),R=S(Q,U,F,B);return null==R?B?(F=E(Q,U,F,null))?"".concat(U,'="').concat(F,'"'):U:null==(R=n(Q,U,F,B))?void 0:R:R});return B="<".concat(Q),c&&(B+=" ".concat(c)),Z.closing&&(B+=" /"),B+=">"}return null==(l=W(Q,B,V))?N(B):l},N);return k&&(c=k.remove(c)),c},U}(),G=Function("\nvar _checkXSS = function (it) {\n  return it && it.Math == Math && it;\n};\nreturn _checkXSS(typeof globalThis === 'object' && globalThis) ||\n_checkXSS(typeof window === 'object' && window) ||\n_checkXSS(typeof self === 'object' && self) ||\n_checkXSS(typeof global === 'object' && global) ||\nFunction('return this')();\n")(),i=new(function(){function U(){var U=this;this.batchData=[],this.uniqKeys=new Set,this.timeout=2e3,this.lock=!1,this.getSlardarBid=function(){var F,Q,B="douyin_web";if(!m.includes(B,"bid"))return B;if(U.config&&U.config.bid)return U.config.bid;if(G&&G._xssBid)return G._xssBid;if(G&&G.slardar&&"function"==typeof G.slardar.config){var R=(G.slardar.config()||{}).bid;if(R)return R}if(G&&G.Slardar&&"function"==typeof G.Slardar.config){var V=(G.Slardar.config()||{}).bid;if(V)return V}return(null===(Q=null===(F=null==G?void 0:G.Slardar)||void 0===F?void 0:F._baseParams)||void 0===Q?void 0:Q.bid)||"argus"},this.getConfigRegion=function(){var F;return m.includes("cn","region")?U.config&&U.config.region?U.config.region:((null===(F=null==G?void 0:G.gfdatav1)||void 0===F?void 0:F.region)||"cn").toLowerCase():"cn"},this.gerReportUrl=function(){var F={cn:b("aHR0cHM6Ly9tb24uemlqaWVhcGkuY29tL21vbml0b3JfYnJvd3Nlci9jb2xsZWN0L2JhdGNoL3NlY3VyaXR5Lz9iaWQ9"),boe:b("aHR0cHM6Ly9tb24uemlqaWVhcGkuY29tL21vbml0b3JfYnJvd3Nlci9jb2xsZWN0L2JhdGNoL3NlY3VyaXR5Lz9iaWQ9"),ttp:b("aHR0cHM6Ly9tb24udXMudGlrdG9rdi5jb20vbW9uaXRvcl9icm93c2VyL2NvbGxlY3QvYmF0Y2gvc2VjdXJpdHkvP2JpZD0="),va:b("aHR0cHM6Ly9tb24tdmEuYnl0ZW92ZXJzZWEuY29tL21vbml0b3JfYnJvd3Nlci9jb2xsZWN0L2JhdGNoL3NlY3VyaXR5Lz9iaWQ9"),maliva:b("aHR0cHM6Ly9tb24tdmEuYnl0ZW92ZXJzZWEuY29tL21vbml0b3JfYnJvd3Nlci9jb2xsZWN0L2JhdGNoL3NlY3VyaXR5Lz9iaWQ9"),sg:b("aHR0cHM6Ly9tb24tdmEuYnl0ZW92ZXJzZWEuY29tL21vbml0b3JfYnJvd3Nlci9jb2xsZWN0L2JhdGNoL3NlY3VyaXR5Lz9iaWQ9"),boei18n:b("aHR0cHM6Ly9tb24tdmEuYnl0ZW92ZXJzZWEuY29tL21vbml0b3JfYnJvd3Nlci9jb2xsZWN0L2JhdGNoL3NlY3VyaXR5Lz9iaWQ9")}[U.getConfigRegion()];if(F)return F+U.getSlardarBid()}}return U.prototype.setConfig=function(U){this.config=U},U.prototype.upload=function(){var U=this,F=this.gerReportUrl();!this.lock&&F&&0!==this.batchData.length&&(this.lock=!0,setTimeout(function(){var Q=U.batchData.slice(0,100);U.batchData=U.batchData.slice(100),G.fetch(F,{method:"post",body:JSON.stringify(Q),headers:{"Content-Type":"application/json"}}).catch(function(U){}),U.lock=!1,U.upload()},this.timeout))},U.prototype.generateKey=function(U){return U.collectKey?[U.collectMode,U.collectKey].join("___"):""},U.prototype.push=function(U){this.batchData.push(U),this.upload()},U.prototype.report=function(U){var F=this.generateKey(U);if(G.fetch&&U.collectKey){var Q="object"==typeof window?window.location.href:"SSR";U.documentUrl=Q;var B={age:Math.floor(Date.now()),type:"xss",url:Q,body:U,"user-agent":""};"enforce"===U.disposition&&"SSR"!==Q||(B.url=F),"SSR"===Q&&(B.url="SSR___".concat(B.url),B.body.ssr=!0),this.push(B)}},U}()),L=function(U){for(var F=0,Q=function(Q){Array.isArray(U[Q])?0===U[Q].length?delete U[Q]:(U[Q]=m.from(m.uniq(U[Q])),F+=U[Q].length):0===m.keys(U[Q]).length?delete U[Q]:m.keys(U[Q]).forEach(function(B){U[Q][B]=m.from(m.uniq(U[Q][B])),F+=U[Q][B].length})},B=0,R=m.keys(U);B<R.length;B++)Q(R[B]);return{count:F,ret:U}};function s(U,F){return i.setConfig(F),new T(F).process(U)}function y(U){var F,Q=(F=/\s|\n|\t/.exec(U))?F.index:-1;if(-1===Q)return{html:"",closing:"/"===U[U.length-2]};var B="/"===(U=U.slice(Q+1,-1).trim())[U.length-1];return B&&(U=U.slice(0,-1).trim()),{html:U,closing:B}}var t=function(U){return -1===(U=(U=(U=(U=U.replace(/&colon;/gi,":")).replace(/&tab;/gi,"")).replace(/&newline;/gi,"")).replace(/(\t|\n|\r)/g,"")).indexOf("&#")?U.trim().toLowerCase():U.trim().replace(/&#(?:(x)([0-9a-f]+)|([0-9]+));?/gi,function(U,F,Q,B){return String.fromCharCode(F?parseInt(Q,16):parseInt(B))}).replace(/(\t|\n|\r)/g,"").toLowerCase()};function Y(U,F){if(void 0===U&&(U=""),"string"!=typeof U)return!0;if(U=t(U),m.includes(U,"base64")&&!function(U){if(""===U||""===U.trim())return!0;try{return!m.includes(U,"data:text/html;base64")}catch(U){return!0}}(U))return F&&F("data:text/html;base64"),!1;var Q=["expression(","behavior:","view-source:"];if(m.some(Q,function(F){return -1!==U.indexOf(F)}))return m.forEach(Q,function(Q){-1!==U.indexOf(Q)&&F&&F(Q)}),!1;var B=["data:application","data:javascript","data:text/html","data:texthtml"];if(m.some(B,function(F){return -1!==U.indexOf(F)}))return m.forEach(B,function(Q){-1!==U.indexOf(Q)&&F&&F(Q)}),!1;if(U.indexOf("javascript:")>0)return F&&F("javascript:"),!1;if(/^javascript:/i.test(U)){var R=U.slice(11).replace(/\s/g,"").trim();return!!m.some(["void","void(0)","void0","false","undefined",";"],function(U){return U===R})||(F&&F("javascript:"),!1)}return!0}var D=function(U,F){var Q,B,R="<%= isSaveValidUrl =>";if("string"!=typeof U||(B=Number("<%= urlLimit =>"),void 0!==Q&&(B=Q),"NaN"!==U.toString()&&-1!==B&&U.length>=B)||Y(U,F))return U;try{if(!0===(R=JSON.parse(R))||"true"===R){var V=new URL(U);return V.origin+V.pathname}}catch(U){}return"#"};function o(U,F,B){if(void 0===U&&(U=""),void 0===F&&(F=[]),"string"!=typeof U)return!0;if(!Y(U=t(U)))return!1;var R,V={url:(R=U.match(/^(?:([A-Za-z]+):)?(\/{0,3})([0-9.\-A-Za-z]+)(?::(\d+))?(?:\/([^?#]*))?(?:\?([^#]*))?(?:#(.*))?$/)||[])[0],scheme:R[1],slash:R[2],host:R[3],port:R[4],path:R[5],query:R[6],hash:R[7]},l=V.scheme,Z=V.host;return B?!!B(U):!(!l||!Z)&&(!m.includes(["http","https","file"],l)||("object"==typeof window&&window&&(F=Q(Q([],F,!0),[location.host],!1)),m.some(F,function(U){return!!(U instanceof RegExp&&U.test(Z))||U===Z})))}var e={a:["target","title","spellcheck","rel"],canvas:[],abbr:["title"],address:[],area:["shape","coords","alt"],article:[],aside:[],audio:["autoplay","controls","loop","preload"],b:[],bdi:["dir"],bdo:["dir"],big:[],blockquote:["cite"],br:[],caption:[],center:[],cite:[],code:[],col:["align","valign","span","width"],colgroup:["align","valign","span","width"],dd:[],del:["datetime"],details:["open"],div:["dir"],dl:[],dt:[],em:[],font:["color","size","face"],footer:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],header:[],hr:[],i:[],img:["alt","title","width","height","decoding"],ins:["datetime"],li:[],mark:[],nav:[],ol:["start"],p:[],pre:[],s:[],section:[],small:[],span:[],sub:[],sup:[],delete:[],form:[],strong:[],mask:["maskunits","x","y","width","height","fill"],table:["width","border","align","valign"],tbody:["align","valign"],td:["width","rowspan","colspan","align","valign"],tfoot:["align","valign"],th:["width","rowspan","colspan","align","valign"],thead:["align","valign"],tr:["rowspan","align","valign"],tt:[],u:[],ul:[],wbr:[],video:["autoplay","controls","loop","preload","height","width"],svg:["viewBox","version","xmlns","fill","width","height","stroke","stroke-width","style"],path:["d","fill","opacity","stroke","p-id","fill-rule","clip-rule","stroke-width","stroke-linecap","stroke-linejoin","fill-opacity","mask"],rect:["x","y","width","height","fill","stroke","rx"],g:[]},M={collect:null,initCollect:function(){this.collect={whiteList:{},filterProtocol:[]}},removeCollect:function(){var U=L(this.collect),F=U.count,Q=U.ret;return this.collect=null,{collectKey:0===F?null:JSON.stringify(Q),collectMode:"white"}},onIgnoreTagAttr:function(U,F,B){return U&&m.indexOf(["href","src"],F)>-1?M.domainWhiteList&&Array.isArray(M.domainWhiteList)&&M.domainWhiteList.length>0&&!o(B,Q([],M.domainWhiteList,!0))?"":"".concat(F,'="').concat(D(B,function(U){var F;null===(F=M.collect)||void 0===F||F.filterProtocol.push(U)}),'"'):U&&(m.indexOf(["style","class","id"],F)>-1||F.indexOf("data-")>-1)?"".concat(F,'="').concat(B,'"'):(M.collect.whiteList[U]=M.collect.whiteList[U]||[],void M.collect.whiteList[U].push(F))},onIgnoreTag:function(U,F){if("style"===U)return F;a(F,function(U,F,Q,B){X(y(B).html.replace("/",""),function(U){M.collect.whiteList[Q]=M.collect.whiteList[Q]||[],M.collect.whiteList[Q].push(U)})},N)},whiteList:e,mergeWhiteList:function(U){for(var F,Q={},B=0,R=m.keys(e);B<R.length;B++)Q[F=R[B]]=m.from(e[F]);for(var V=0,l=m.keys(U);V<l.length;V++)Q[F=l[V]]=F in e?e[F].concat(U[F]):m.from(U[F]);return Q},setWhiteList:function(U){for(var F=0,Q=m.keys(U);F<Q.length;F++){var B=Q[F];this.whiteList[B]=B in e?e[B].concat(U[B]):m.from(U[B])}}};try{var x={},I="merge";m.includes(I,"override")&&(M.whiteList=x.whiteList),m.includes(I,"merge")&&M.setWhiteList(x.whiteList)}catch(U){}var K=function(U,F){for(var Q={},B=0,R=m.keys(U);B<R.length;B++){var V=R[B];Array.isArray(U[V])?Q[V]=m.from(U[V]):Q[V]=K({},U[V])}for(var l=0,Z=m.keys(F);l<Z.length;l++)(V=Z[l])in U?Array.isArray(U[V])?Q[V]=U[V].concat(F[V]):Q[V]=K(U[V],F[V]):Array.isArray(F[V])?Q[V]=m.from(F[V]):Q[V]=K({},F[V]);return Q},u={blackList:{a:["folder"],meta:["content"],iframe:["srcdoc"],input:["pattern"],vmlframe:["xmlns"]},blackTags:["script","xml","embed","isindex","object","base","set","handler","animate","payload","import"],blackAttrs:["charset","ns","namespace","formaction","xlink:href","xmlns:xlink","handler","repeat","repeat-start","repeat-end"],blackAttrRegExps:[/^on/],filterList:{param:["value"],video:["poster"],form:["action"]},filterAttrs:["href","src","background","style","dynsrc","lowsrc","content"]};try{var H={};H.blackAttrRegExps&&(H.blackAttrRegExps=H.blackAttrRegExps.map(function(U){return new RegExp(U.toString().slice(1,U.toString().length-1))}));var z="merge";m.includes(z,"override")&&(u=H),m.includes(z,"merge")&&(u=K(u,H))}catch(U){}var v={mode:"black",whiteList:{},blackConfig:u,collect:null,initCollect:function(){v.collect={blackList:{},blackTags:[],blackAttrs:[],blackAttrRegExps:[],filterAttrs:[],filterList:{},filterProtocol:[]}},removeCollect:function(){var U=L(v.collect),F=U.count,Q=U.ret;return v.collect=null,{collectKey:0===F?null:JSON.stringify(Q),collectMode:"black"}},onIgnoreTag:function(U,F){var Q;if(!m.includes(u.blackTags,U))return a(F,function(U,F,Q,B,R){if(-1!==Q.indexOf("/"))return N(B);if(R)return"</".concat(Q,">");var V=y(B),l=X(V.html,function(U,F){var B,R=0;if(u.blackList[Q]&&m.includes(u.blackList[Q],U)&&(v.collect.blackList[Q]=v.collect.blackList[Q]||[],v.collect.blackList[Q].push(U),R++),u.blackAttrRegExps.length&&u.blackAttrRegExps.some(function(F){return F.test(U)})&&m.forEach(u.blackAttrRegExps,function(F){F.test(U)&&(v.collect.blackAttrRegExps.push("".concat(F.toString(),"->").concat(U)),R++)}),u.blackAttrs.length&&m.includes(u.blackAttrs,U)&&(u.blackAttrs.push(U),R++),!R){if(u.filterList&&u.filterList[Q]&&m.includes(u.filterList[Q],U)){var V=D(F,function(U){var F;null===(F=v.collect)||void 0===F||F.filterProtocol.push(U)});return V!==F&&(v.collect.filterList[Q]=v.collect.filterList[Q]||[],v.collect.filterList[Q].push(U)),F?"".concat(U,"='").concat(V,"'"):U}return u.filterAttrs&&m.includes(u.filterAttrs,U)?((V=D(F,function(U){var F;null===(F=v.collect)||void 0===F||F.filterProtocol.push(U)}))!==F&&(null===(B=v.collect)||void 0===B||B.filterAttrs.push(U)),F?"".concat(U,"='").concat(V,"'"):U):F?"".concat(U,"='").concat(F,"'"):U}});return B="<".concat(Q),l&&(B+=" ".concat(l)),V.closing&&(B+=" /"),B+=">"},N);null===(Q=v.collect)||void 0===Q||Q.blackTags.push(U)}},j=function(U){var F=U.reportOnly,Q=void 0===F||F,B=U.block;return Q&&"all"===Q?"report":("string"==typeof Q&&("true"===Q&&(Q=!0),"false"===Q&&(Q=!1)),B?"enforce":Q?"report":"enforce")},w=function(U){return function(Q,B,R){if(!Q||"string"!=typeof Q)return Q;var V=B;U===s&&(V=M).initCollect();var l=U(Q,V);if(C(l)===C(Q))return Q;if(!R)return l;var Z=R.logType,d=j(R),J=V.removeCollect();return i.report(F(F({type:Z,disposition:d},J),{sourceText:h(Q),filterText:h(l)})),"enforce"===d?l:Q}},r=w(function(U,F){return void 0===F&&(F={}),F&&F.whiteList||(F.whiteList={a:["target","href","title"],abbr:["title"],address:[],area:["shape","coords","href","alt"],article:[],aside:[],audio:["autoplay","controls","crossorigin","loop","muted","preload","src"],b:[],bdi:["dir"],bdo:["dir"],big:[],blockquote:["cite"],br:[],caption:[],center:[],cite:[],code:[],col:["align","valign","span","width"],colgroup:["align","valign","span","width"],dd:[],del:["datetime"],details:["open"],div:[],dl:[],dt:[],em:[],figcaption:[],figure:[],font:["color","size","face"],footer:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],header:[],hr:[],i:[],img:["src","alt","title","width","height"],ins:["datetime"],li:[],mark:[],nav:[],ol:[],p:[],pre:[],s:[],section:[],small:[],span:[],sub:[],summary:[],sup:[],strong:[],strike:[],table:["width","border","align","valign"],tbody:["align","valign"],td:["width","rowspan","colspan","align","valign"],tfoot:["align","valign"],th:["width","rowspan","colspan","align","valign"],thead:["align","valign"],tr:["rowspan","align","valign"],tt:[],u:[],ul:[],video:["autoplay","controls","crossorigin","loop","muted","playsinline","poster","preload","src","height","width"]}),new T(F).process(U)}),P=w(s),g=function(U,F,Q){var B=[],R=D(U,function(U){B.push(U)});if(R===U)return U;B=m.from(m.uniq(B));var V=F||Q||{};if(!V)return R;var l=V.logType,Z=j(Q);return i.report({type:l,disposition:Z,collectKey:B.join("___"),collectData:JSON.stringify(B),collectMode:"black",sourceText:h(U),filterText:h(R)}),"enforce"===Z?R:U},O=G._xssProject||{},f=G.xssNamespace||{},A="3.0.26",_={FilterXSS:T,version:A,webpackPluginVersion:"<%= webpackPluginVersion =>",reportOnly:"<%= reportOnly =>",filterXSS:r,_filterXSS:P,filterUrl:g,Config:M,BlackConfig:v,project:O,setProjectName:function(U){O[U]=this,G._xssProjectName=U}};f.douyin_web=_,G.xssNamespace=f,G.Math&&!G.Math.xssNamespace&&(G.Math.xssNamespace=f),O[A]=_,G.globalThis=G,G.getFilterXss=function(){return void 0!==this._xssProjectName?this._xssProject[this._xssProjectName]:_},G.xss=_,G.isSafeUrl=o,G.isSafeDomain=o,G.isSafeProtocol=Y,G._xssProject=O,G._xssProjectName&&(O[G._xssProjectName]=_);var q=_.setProjectName.bind(_);U.BlackConfig=v,U.Config=M,U.FilterXSS=T,U._filterXSS=P,U.filterUrl=g,U.filterXSS=r,U.isSafeDomain=o,U.isSafeProtocol=Y,U.isSafeUrl=o,U.project=O,U.setProjectName=q,U.setXssNamespace=function(U){var F=U.appId,Q=U.bid,B=U.region;f[F]=_;M.bid=Q,M.region=B,M.enabled=!0},U.xssNamespace=f,Object.defineProperty(U,"__esModule",{value:!0})});"use strict";(self.webpackChunkdouyin_web=self.webpackChunkdouyin_web||[]).push([["1494"],{76314:function(U,F,Q){Q.d(F,{Z:function(){return V}}),Q(121621),Q(864614),Q(616414),Q(612222),Q(510766),Q(433257),Q(312602);var B="",R="undefined"!=typeof window&&window.Blob&&new Blob([atob(B)],{type:"text/javascript;charset=utf-8"});function V(){var U;try{if(!(U=R&&(window.URL||window.webkitURL).createObjectURL(R)))throw"";return new Worker(U)}catch(U){return new Worker("data:application/javascript;base64,"+B)}finally{!("undefined"!=typeof window&&navigator.userAgent.indexOf("Trident/")>0)&&U&&(window.URL||window.webkitlRL).revokeObjectURL(U)}}},493820:function(U,F,Q){Q.d(F,{Z:function(){return B}});function B(U,F){F&&U.then(function(U){F(null,U)},function(U){F(U)})}},992205:function(U,F,Q){Q.d(F,{Z:function(){return T}}),Q(530129),Q(34580),Q(267869),Q(899334);var B=Q(377998),R=Q(440669),V=Q(356670),l=Q(269277),Z=Q(917970),d=Q(197201),J=Q(247425),W=Q(938156),S=Q(668117),n=Q(737299),E=Q.n(n);Q(477416),Q(585322),Q(561999),Q(210434),Q(514312),Q(947478),Q(121621),Q(864614),Q(632852),Q(616414),Q(612222),Q(379493),Q(130458);var N=Q(114191),m=Q(579252),k=Q(495728),c=Q(720202),h=Q(303075),b=Q(364508);function a(U,F){var Q=Object.keys(U);if(Object.getOwnPropertySymbols){var B=Object.getOwnPropertySymbols(U);F&&(B=B.filter(function(F){return Object.getOwnPropertyDescriptor(U,F).enumerable})),Q.push.apply(Q,B)}return Q}function X(U){for(var F=1;F<arguments.length;F++){var Q=null!=arguments[F]?arguments[F]:{};F%2?a(Object(Q),!0).forEach(function(F){(0,S.Z)(U,F,Q[F])}):Object.getOwnPropertyDescriptors?Object.defineProperties(U,Object.getOwnPropertyDescriptors(Q)):a(Object(Q)).forEach(function(F){Object.defineProperty(U,F,Object.getOwnPropertyDescriptor(Q,F))})}return U}var p={"mp4a.40.5":1,"mp4a.40.2":2},C=new(function(){function U(){(0,J.Z)(this,U),(0,S.Z)(this,"_queue",[]),"undefined"!=typeof document&&(this._tempMedia=document.createElement("video"))}return(0,W.Z)(U,[{key:"tempMedia",get:function(){return this._tempMedia}},{key:"hasCached",get:function(){return -1!==this._queue.findIndex(function(U){return 1===U.codec})&&-1!==this._queue.findIndex(function(U){return 2===U.codec})}},{key:"getCachedMedia",value:function(U){var F=this._queue.findIndex(function(F){return F.codec===U});return -1!==F?this._queue.splice(F,1)[0]:null}},{key:"cacheMedia",value:function(U){var F=U.codec,Q=U.media,B=U.mse,R=p[F];if(this._queue=this._queue.filter(function(U){U.mse&&!U.mse.isOpened&&U.mse.unbindMedia();var F,Q=null===(F=U.mse)||void 0===F?void 0:F.isOpened;return!Q&&U.media&&(U.media.canuse=0),Q}),Q.canuse=0,!F||this._queue.filter(function(U){return U.codec===R}).length>2){null==B||B.endOfStream(),null==B||B.unbindMedia();return}Q.canuse=1,this._queue.push({codec:R,media:Q,mse:B})}}]),U}()),T=function(U){(0,l.Z)(G,U);var F,Q,n,h,a,T=(F=G,Q=function(){if("undefined"==typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(U){return!1}}(),function(){var U,B=(0,d.Z)(F);return U=Q?Reflect.construct(B,arguments,(0,d.Z)(this).constructor):B.apply(this,arguments),(0,Z.Z)(this,U)});function G(U,F){var Q,V;return(0,J.Z)(this,G),Q=T.call(this,U,F),(0,S.Z)((0,R.Z)(Q),"_media",void 0),(0,S.Z)((0,R.Z)(Q),"_isTempMedia",!1),(0,S.Z)((0,R.Z)(Q),"_mse",void 0),(0,S.Z)((0,R.Z)(Q),"_remuxer",null),(0,S.Z)((0,R.Z)(Q),"_codec",""),(0,S.Z)((0,R.Z)(Q),"_sourceCreated",!1),(0,S.Z)((0,R.Z)(Q),"_needInitSegment",!0),(0,S.Z)((0,R.Z)(Q),"_seekNoSideEffect",!1),(0,S.Z)((0,R.Z)(Q),"_startRendered",!1),(0,S.Z)((0,R.Z)(Q),"_firstTimeAppendedBuffer",!1),(0,S.Z)((0,R.Z)(Q),"_sampleQueue",[]),(0,S.Z)((0,R.Z)(Q),"_inProcessing",!1),(0,S.Z)((0,R.Z)(Q),"_duration",0),(0,S.Z)((0,R.Z)(Q),"_mediaCache",C),(0,S.Z)((0,R.Z)(Q),"_resetDts",function(){}),(0,S.Z)((0,R.Z)(Q),"_onCanplay",function(){!Q._ready&&(Q._ready=!0,Q.emit(c.ZP.AUDIO.AUDIO_READY))}),(0,S.Z)((0,R.Z)(Q),"_onPlaying",function(){Q._parent.ready&&(Q._audioCanAutoplay=!0,Q._emitTimelineEvents(c.ZP.TIMELINE.PLAY_EVENT,c.ZP.VIDEO_EVENTS.PLAYING))}),(0,S.Z)((0,R.Z)(Q),"_onWaiting",function(){if(!Q._seekNoSideEffect){try{for(var U,F=Q._media.buffered,B=Q._media.currentTime,V=0,l=0,Z=F.length;l<Z;l++)F.start(l)<B&&F.end(l)>B&&(V=F.end(l)-B);if(Math.abs(V)>.5)return;if(Math.abs(Q._media.duration-Q._media.currentTime)<(Q.duration>60?.5:.3)){!Q._reuseMse&&Q._mse.endOfStream(),null===(U=(0,R.Z)(Q))||void 0===U||U._emitTimelineEvents(c.ZP.TIMELINE.PLAY_EVENT,c.ZP.VIDEO_EVENTS.ENDED);return}}catch(U){}Q._ready=!1,Q.emit(c.ZP.AUDIO.AUDIO_WAITING)}}),(0,S.Z)((0,R.Z)(Q),"_onSeeked",function(){if(Q._seekNoSideEffect||Q._isLive){Q._seekNoSideEffect=!1;return}k.kg.log(Q.TAG,"seeked","_readyStatus:",Q._ready),!Q._ready&&(Q._media.pause(),Q._ready=!0,Q.emit(c.ZP.AUDIO.AUDIO_READY,!0))}),(0,S.Z)((0,R.Z)(Q),"_onProgress",function(){if(Q._media.readyState<=1){var U=Q._getBufferGap();U>0&&U<1&&(Q._media.currentTime+=U+.05,k.kg.warn(Q.TAG,"progress, gap=",U))}Q._emitTimelineEvents(c.ZP.TIMELINE.PLAY_EVENT,c.ZP.VIDEO_EVENTS.PROGRESS),Q._emitTimelineEvents(c.ZP.TIMELINE.PLAY_EVENT,c.ZP.VIDEO_EVENTS.DURATION_CHANGE)}),(0,S.Z)((0,R.Z)(Q),"_onEnded",function(){var U;k.kg.log(Q.TAG,"ended!"),null===(U=(0,R.Z)(Q))||void 0===U||U._emitTimelineEvents(c.ZP.TIMELINE.PLAY_EVENT,c.ZP.VIDEO_EVENTS.ENDED)}),(0,S.Z)((0,R.Z)(Q),"_onOnceProgress",function(){if(Q._media.buffered.length){var U=Q._media.buffered.start(0);U&&(Q._media.currentTime=U+.05,k.kg.log(Q.TAG,"start gap:",U)),Q._media.removeEventListener("progress",Q._onOnceProgress)}}),(0,S.Z)((0,R.Z)(Q),"_onError",function(){var U;Q._emitTimelineEvents(c.ZP.TIMELINE.PLAY_EVENT,c.ZP.VIDEO_EVENTS.ERROR,Q._assembleErr("audio error: ".concat(null===(U=Q._media.error)||void 0===U?void 0:U.message),3))}),(0,S.Z)((0,R.Z)(Q),"_appendChunk",function(U,F){if(!Q.noAudio){if(F.samples.length){if(!Q._codec&&(2!==F.objectType&&5!==F.objectType?Q._codec="mp4a.40.5":Q._codec=F.codec,Q._isTempMedia&&Q._switchMedia(Q._codec)),F.samples.forEach(function(U){U.baseMediaDecodeTime=F.baseMediaDecodeTime,Q._sampleQueue.push(U)}),F.samples=[],!Q._meta){Q._meta=X(X({},F),{},{exist:function(){return!0},hasSample:function(){return!0},samples:[]}),k.kg.warn(Q.TAG,"audio set metadata",Q._meta),Q._doAppendWrapper();return}Q._meta.sampleRate!==F.sampleRate&&(k.kg.warn(Q.TAG,"discontinue: ".concat(Q._meta.sampleRate," -> ").concat(F.sampleRate)),Q._needInitSegment=!0,Object.keys(F).forEach(function(U){Q._meta[U]=F[U]})),!Q._inProcessing&&Q._sampleQueue.length&&Q._doAppendWrapper()}}}),(0,S.Z)((0,R.Z)(Q),"_doAppend",(V=(0,B.Z)(E().mark(function U(F){var B,R,V;return E().wrap(function(U){for(;;)switch(U.prev=U.next){case 0:if(!Q._remuxer&&(Q._remuxer=new N.N({samples:[],exist:function(){return!1}},F)),B=F.samples,Q._sourceCreated){U.next=12;break}return Q.analyse.addAudioMseOpenStart(),U.next=6,Q._mse.open();case 6:Q._sourceCreated=!0,k.kg.log(Q.TAG,"video/mp4;codecs=".concat(Q._codec)),Q._mse.createSource(F.type,"video/mp4;codecs=".concat(Q._codec)),Q.analyse.addAudioMseOpend(),k.kg.log(Q.TAG,"sb created!"),Q._checkAutoPlay();case 12:if(R=Q._remuxer.remux(Q._needInitSegment),!(Q._needInitSegment&&!R.audioInitSegment)){U.next=15;break}return U.abrupt("return");case 15:return Q._needInitSegment=!1,V=[],R.audioInitSegment&&V.push(Q._mse.append(F.type,R.audioInitSegment)),R.audioSegment&&V.push(Q._mse.append(F.type,R.audioSegment)),U.abrupt("return",Promise.all(V).then(function(){return B[B.length-1].dts/1e3}).then(function(){!Q._firstTimeAppendedBuffer&&(Q._firstTimeAppendedBuffer=!0,Q.analyse.addAudioFirstTimeAppended())}));case 20:case"end":return U.stop()}},U)})),function(U){return V.apply(this,arguments)})),(0,S.Z)((0,R.Z)(Q),"_doPlay",function(){Q._media.play().catch(function(){})}),(0,S.Z)((0,R.Z)(Q),"_doPause",function(){Q._media.pause()}),(0,S.Z)((0,R.Z)(Q),"_doSeek",function(U){k.kg.log(Q.TAG,"doSeek, t=",U),Q._ready=!1,Q._media.currentTime=U}),(0,S.Z)((0,R.Z)(Q),"_doChaseFrame",function(U){var F=U.position;Q._seekNoSideEffect=!0,Q._media.currentTime=F}),(0,S.Z)((0,R.Z)(Q),"_startRender",function(){k.kg.log(Q.TAG,"start render"),Q._startRendered=!0,Q._media.play().catch(function(){})}),Q.TAG="AudioMseRender",Q._reuseMse=(0,b.tT)().reuseMseForAudio,Q._initMedia(),Q}return(0,W.Z)(G,[{key:"isMse",get:function(){return!0}},{key:"media",get:function(){return this._media}},{key:"currentTime",get:function(){return this._media.currentTime}},{key:"buffered",get:function(){return this._media.buffered}},{key:"duration",get:function(){return isNaN(this._media.duration)?1/0:this._media.duration},set:function(U){this._duration=U,this._updateDuration(U)}},{key:"audioCanAutoplay",get:function(){return this._audioCanAutoplay||this.noAudio}},{key:"readyState",get:function(){var U;return(null===(U=this._media)||void 0===U?void 0:U.readyState)||0}},{key:"_initMedia",value:function(){if(!this._reuseMse||!C.hasCached){k.kg.log(this.TAG,"init media and mse directly"),this._media=document.createElement("video"),this._media.autoplay=!0,this._media.canuse=1,this._mse=new m.d1,this._bindEvents(),this._bindMediaEvents(),this._mse.bindMedia(this._media);return}k.kg.log(this.TAG,"bind media temporary"),this._media=C.tempMedia,this._bindEvents(),this._isTempMedia=!0}},{key:"_switchMedia",value:function(U){var F=this._media,Q=C.getCachedMedia(p[U]);Q?(k.kg.warn(this.TAG,"switch to cached media for audio play! codec=".concat(U)),this._media=Q.media,this._mse=Q.mse,this._bindMediaEvents(),this._updateDuration(this._duration),this._media.currentTime=.05,this._sourceCreated=!0,this._audioCanAutoplay=!0,this.analyse.addAudioMseOpend()):this._initMedia(),this._media.volume=F.volume,this._media.playbackRate=F.playbackRate,this._isTempMedia=!1}},{key:"_getBufferGap",value:function(){for(var U=this.buffered,F=0,Q=U.length;F<Q;F++)if(!(U.end(F)<this.currentTime))return U.start(F)-this.currentTime;return 0}},{key:"canSeek",value:function(){return!0}},{key:"resume",value:function(){return this._media.play()}},{key:"pause",value:function(){return this._media.pause()}},{key:"seekNoSideEffect",value:function(U){this._doChaseFrame(U)}},{key:"dump",value:function(){}},{key:"_emitTimelineEvents",value:function(U,F,Q){var B,R;null===(B=this._parent)||void 0===B||null===(R=B.emit)||void 0===R||R.call(B,U,F,Q)}},{key:"_assembleErr",value:function(U,F){var Q=Error(U);return Q.code=3,Q.subCode=F,Q}},{key:"_bindEvents",value:function(){var U=this;(0,V.Z)((0,d.Z)(G.prototype),"_bindEvents",this).call(this),this._parent.on(c.ZP.DECODE_EVENTS.CHASE_AUDIO_FRAME,this._doChaseFrame),this._parent.on(c.ZP.TIMELINE.UPDATE_VOLUME,function(F){U._media.volume=F,U._emitTimelineEvents(c.ZP.TIMELINE.PLAY_EVENT,c.ZP.VIDEO_EVENTS.VOLUME_CHANGE)}),this._parent.on(c.ZP.TIMELINE.END_OF_STREAM,function(){if(!U.reuseMseForAudio){var F;null===(F=U._mse)||void 0===F||F.endOfStream()}}),this._parent.on(c.ZP.TIMELINE.SET_PLAYBACKRATE,function(F){k.kg.log(U.TAG,"change playbackrate, ",F),U._media.playbackRate=F})}},{key:"_bindMediaEvents",value:function(){this._media.addEventListener("canplay",this._onCanplay),this._media.addEventListener("playing",this._onPlaying),this._media.addEventListener("waiting",this._onWaiting),this._media.addEventListener("seeked",this._onSeeked),this._media.addEventListener("progress",this._onProgress),this._media.addEventListener("ended",this._onEnded),this._media.addEventListener("progress",this._onOnceProgress),this._media.addEventListener("error",this._onError)}},{key:"_updateDuration",value:(n=(0,B.Z)(E().mark(function U(F){return E().wrap(function(U){for(;;)switch(U.prev=U.next){case 0:if(!this._mse){U.next=9;break}if(this._mse.isOpened){U.next=4;break}return U.next=4,this._mse.open();case 4:if(this._mse){U.next=6;break}return U.abrupt("return");case 6:return U.next=8,this._mse.updateDuration(F);case 8:k.kg.log(this.TAG,"update duration",F);case 9:case"end":return U.stop()}},U,this)})),function(U){return n.apply(this,arguments)})},{key:"_doAppendWrapper",value:(h=(0,B.Z)(E().mark(function U(){var F;return E().wrap(function(U){for(;;)switch(U.prev=U.next){case 0:if(this._meta){U.next=2;break}return U.abrupt("return");case 2:return this._meta.samples=this._sampleQueue.slice(),this._meta.baseMediaDecodeTime=this._meta.samples[0].baseMediaDecodeTime,this._sampleQueue=[],U.prev=5,this._inProcessing=!0,U.next=9,this._doAppend(this._meta);case 9:if(F=U.sent,this.isLive&&this._emitTimelineEvents(c.ZP.TIMELINE.UPDATE_SEGMENT_END,F),this._inProcessing=!1,!this._sampleQueue.length){U.next=15;break}return U.next=15,this._doAppendWrapper();case 15:U.next=20;break;case 17:U.prev=17,U.t0=U.catch(5),this._emitTimelineEvents(c.ZP.TIMELINE.PLAY_EVENT,c.ZP.VIDEO_EVENTS.ERROR,this._assembleErr("audio error: ".concat(null===U.t0||void 0===U.t0?void 0:U.t0.message),3));case 20:case"end":return U.stop()}},U,this,[[5,17]])})),function(){return h.apply(this,arguments)})},{key:"_checkAutoPlay",value:function(){var U=this;this._media.addEventListener("canplay",function F(){if(U._media){var Q=U._media.volume;U._media.volume=Math.min(Q,.1);var B=U._media.play();(B=B.then?B:Promise.reject()).then(function(){k.kg.log(U.TAG,"auto play by checkAutoPlay!"),U._audioCanAutoplay=!0}).catch(function(){k.kg.warn(U.TAG,"can’t auto play!"),U._audioCanAutoplay=!1,U.emit(c.ZP.AUDIO.AUDIO_NOT_ALLOWED_AUTOPLAY)}).finally(function(){U._media&&(U._media.volume=Q,!U._startRendered&&(U._media.pause(),k.kg.log(U.TAG,"auto paused by checkAutoPlay!")),U._media.removeEventListener("canplay",F))})}})}},{key:"_destroy",value:(a=(0,B.Z)(E().mark(function U(){var F,Q,B,R;return E().wrap(function(U){for(;;)switch(U.prev=U.next){case 0:if(k.kg.log(this.TAG,"destroy audio render"),this._remuxer=null,this.removeAllListeners(),this._media.removeEventListener("canplay",this._onCanplay),this._media.removeEventListener("playing",this._onPlaying),this._media.removeEventListener("waiting",this._onWaiting),this._media.removeEventListener("seeked",this._onSeeked),this._media.removeEventListener("progress",this._onProgress),this._media.removeEventListener("ended",this._onEnded),this._media.removeEventListener("progress",this._onOnceProgress),this._media.removeEventListener("error",this._onError),this._reuseMse){U.next=18;break}return null===(F=this._mse)||void 0===F||F.endOfStream(),U.next=15,null===(Q=this._mse)||void 0===Q?void 0:Q.unbindMedia();case 15:this._media&&(this._media.canuse=0),U.next=21;break;case 18:null!==(B=this._media.buffered)&&void 0!==B&&B.length&&(null===(R=this._mse)||void 0===R||R.clearAllBuffer()),C.cacheMedia({codec:this._codec,media:this._media,mse:this._mse}),k.kg.log(this.TAG,"cache media for audio play, codec=",this._codec);case 21:this._mse=null,this._meta=null,this._media=null,this._mediaCache=null;case 25:case"end":return U.stop()}},U,this)})),function(){return a.apply(this,arguments)})}],[{key:"isSupported",value:function(){return(0,b.tT)().audioWithMse&&!!window.MediaSource&&window.MediaSource.isTypeSupported('video/mp4; codecs="mp4a.40.5"')}}]),G}(h.Z)},495728:function(U,F,Q){Q.d(F,{Je:function(){return d},Mv:function(){return Z},kg:function(){return l}});var B=Q(392869),R=Q(247425),V=Q(938156);Q(227470),Q(561999),Q(514312),Q(121621),Q(864614),Q(812735),Q(623302),Q(983431),Q(319386),Q(657170),Q(853127),Q(644952),Q(759149),Q(949136),Q(966922),Q(33814),Q(29536),Q(716005),Q(548485),Q(260075),Q(791017),Q(743286),Q(310378),Q(124539),Q(48498),Q(728271),Q(814647),Q(535689),Q(659673),Q(632852);var l=new(function(){function U(){var F=this;(0,R.Z)(this,U);try{var Q=/xgd=(\d)/.exec(document.cookie);this._status=!!Q,this._level=Q&&Q[1]}catch(U){this._status=!1}["group","groupEnd","log","warn","error"].forEach(function(U){F[U]=function(Q,R,V,l,Z,d,J,W,S,n){if(F._status){var E,N=[R,V,l,Z,d,J,W,S,n].filter(function(U){return void 0!==U});(E=console)[U].apply(E,["["+Q+"]:"].concat((0,B.Z)(N)))}}})}return(0,V.Z)(U,[{key:"enable",get:function(){return this._status}},{key:"long",get:function(){return"2"===this._level}}]),U}());function Z(U,F){if(U&&F){var Q=new Uint8Array(U.byteLength+F.byteLength+11);Q[0]=1,Q[1]=U[1],Q[2]=U[2],Q[3]=U[3],Q[4]=255,Q[5]=225;var B=6;return Q.set(new Uint8Array([U.byteLength>>>8&255,255&U.byteLength]),B),B+=2,Q.set(U,B),Q[B+=U.byteLength]=1,B++,Q.set(new Uint8Array([F.byteLength>>>8&255,255&F.byteLength]),B),B+=2,Q.set(F,B),Q}}function d(){var U,F,Q=new Promise(function(Q,B){U=Q,F=B});return Q.resolve=U,Q.reject=F,Q}},304304:function(U,F,Q){Q.d(F,{l:function(){return R}});var B=Q(809345),R=function(){function U(){(0,B.PA)(this,U)}return(0,B.qH)(U,null,[{key:"start",value:function(U){return!U||!U.length||1===U.length&&U.end(0)-U.start(0)<1e-6||1===U.length&&0>U.start(0)?0:U.start(0)}},{key:"end",value:function(U){return!U||!U.length||1===U.length&&U.end(0)-U.start(0)<1e-6?0:U.end(U.length-1)}},{key:"get",value:function(U){if(U)try{return U.buffered}catch(U){}}},{key:"buffers",value:function(U,F){if(!U||!U.length)return[];for(var Q=[],B=0,R=U.length;B<R;B++){var V=Q.length;if(V&&F){var l=Q[V-1],Z=l[1];if(U.start(B)-Z<=F){var d=U.end(B);d>Z&&(l[1]=d)}else Q.push([U.start(B),U.end(B)])}else Q.push([U.start(B),U.end(B)])}return Q}},{key:"totalLength",value:function(U){return U&&U.length?U.reduce(function(U,F){return U+(F[1]-F[0])},0):0}},{key:"info",value:function(F){var Q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,B=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;if(!F||!F.length)return{start:0,end:0,buffers:[]};for(var R=0,V=0,l=0,Z=0,d=0,J=0,W=0,S=U.buffers(F,B),n=0,E=S.length;n<E;n++){var N=S[n];if(Q+B>=N[0]&&Q<=N[1])R=N[0],V=N[1],l=n;else if(Q+B<N[0]){Z=N[0],d=N[1];break}else Q+B>N[1]&&(J=N[0],W=N[1])}return{start:R,end:V,index:l,buffers:S,nextStart:Z,nextEnd:d,prevStart:J,prevEnd:W,currentTime:Q,behind:Q-R,remaining:V?V-Q:0,length:U.totalLength&&U.totalLength(S)}}}]),U}()},317419:function(U,F,Q){Q.d(F,{_:function(){return N}});var B=Q(177595),R=Q(882150),V=Q(178777),l=Q(128159),Z=Q(449491),d=Q(466851),J=Q(120915),W=Q(410486),S=Q(145454),n=Q(146575),E=["stts","stsc","stsz","stco","co64","stss","ctts"],N=function(){function U(F,Q,l,Z){var J,W,n=this;if((0,B.PA)(this,U),(0,B._x)(this,"_videoSamples",[]),(0,B._x)(this,"_audioSamples",[]),(0,B._x)(this,"_lastRemainBuffer",[]),(0,B._x)(this,"_lastRemainBufferStartPos",0),(0,B._x)(this,"videoMaxFrameIdx",-1),(0,B._x)(this,"audioMaxFrameIdx",-1),this.videoTrack=new R.q,this.audioTrack=new V.W,this.metadataTrack=l||new d.m$,this.videoSegmnents=F,this.audioSegmnents=Q,this.log=new S.Y("MP4Demuxer",!Z||!Z.openLog||!Z.openLog),this.memoryOpt=null==Z?void 0:Z.memoryOpt,!this.memoryOpt&&(F&&F.forEach(function(U){var F;(F=n._videoSamples).push.apply(F,(0,B.u)(U.frames))}),Q&&Q.forEach(function(U){var F;(F=n._audioSamples).push.apply(F,(0,B.u)(U.frames))})),(null===(J=this.videoSegmnents)||void 0===J?void 0:J.length)>0){var E=this.videoSegmnents[this.videoSegmnents.length-1].frames;this.videoMaxFrameIdx=E[E.length-1].index}if((null===(W=this.audioSegmnents)||void 0===W?void 0:W.length)>0){var N=this.audioSegmnents[this.audioSegmnents.length-1].frames;this.audioMaxFrameIdx=N[N.length-1].index}}return(0,B.qH)(U,[{key:"parseSamples",value:function(U){if(!U)throw Error("moov is required");!this.videoTrack.codec&&!this.audioTrack.codec&&(W.I.moovToTrack(U,this.videoTrack,this.audioTrack),this.videoSenc=this.videoTrack.videoSenc,this.audioSenc=this.audioTrack.audioSenc,this.memoryOpt&&this.clearBoxEntries(U))}},{key:"demux",value:function(U,F,Q,B,R){this.parseSamples(R);var V=this.videoTrack,d=this.audioTrack;V.samples=[],d.samples=[];var W={};if(Q){var S,n,E,N,m=0;if(this.memoryOpt&&this.videoSegmnents&&!(W=this.getFramePosByIdx("video",Q[0])))throw Error("cannot found video frame #".concat(Q[0]));for(var k=W,c=k.frameIdx,h=k.segmentIdx,b=Q[0],a=Q[1];b<=a;b++){if(!this._videoSamples.length&&this.videoSegmnents){var X=this.getFrameInfo("video",h,c);S=X.sample,h=X.segmentIdx,c=X.frameIdx}else S=this._videoSamples[b];if(!S)throw Error("cannot found video frame #".concat(b));E=S.offset-F,n=U.subarray(E,E+S.size),(N=new l._("number"==typeof S.pts?S.pts:S.dts,S.dts)).duration=S.duration,N.gopId=S.gopId,S.keyframe&&N.setToKeyframe();for(var p=0,C=n.length-1;p<C;)m=(0,J.Bh)(n,p),p+=4,N.units.push(n.subarray(p,p+m)),p+=m;V.samples.push(N)}V.baseMediaDecodeTime=V.samples[0].dts}if(W={},B){if(this.memoryOpt&&this.audioSegmnents&&!(W=this.getFramePosByIdx("audio",B[0])))throw Error("cannot found video frame #".concat(B[0]));for(var T=W,G=T.frameIdx,i=T.segmentIdx,L=B[0],s=B[1];L<=s;L++){if(!this._audioSamples.length&&this.audioSegmnents){var y=this.getFrameInfo("audio",i,G);S=y.sample,i=y.segmentIdx,G=y.frameIdx}else S=this._audioSamples[L];if(!S)throw Error("cannot found video frame #".concat(L));E=S.offset-F,n=U.subarray(E,E+S.size),d.samples.push(new Z.X(S.dts,n,S.duration))}d.baseMediaDecodeTime=d.samples[0].dts}return{videoTrack:V,audioTrack:d,metadataTrack:this.metadataTrack}}},{key:"demuxPart",value:function(U,F,Q,B,R,V,d,W){if(this.parseSamples(R),this.videoTrack.useEME=V,this.audioTrack.useEME=V,this._lastRemainBuffer&&this._lastRemainBuffer.byteLength>0&&F>this._lastRemainBufferStartPos&&F<=this._lastRemainBufferStartPos+this._lastRemainBuffer.byteLength){for(var S=0;S<20;)try{var n=this._lastRemainBuffer.subarray(0,F-this._lastRemainBufferStartPos),E=new Uint8Array(U.byteLength+n.byteLength);E.set(n,0),E.set(new Uint8Array(U),n.byteLength),U=E,F-=n.byteLength,this._lastRemainBuffer=null,this._lastRemainBufferStartPos=0;break}catch(U){if(S<20)S++;else throw Error("new Uint8Array error:,"+U.errorMessage)}}var N=this.videoTrack,m=this.audioTrack;N.samples=[],m.samples=[],N.videoSenc=null,m.audioSenc=null,(null==Q?void 0:Q[1])>this.videoMaxFrameIdx&&this.videoMaxFrameIdx>0&&(Q[1]=this.videoMaxFrameIdx),(null==B?void 0:B[1])>this.audioMaxFrameIdx&&this.audioMaxFrameIdx>0&&(B[1]=this.audioMaxFrameIdx);var k=0,c=0,h={},b=U.byteLength+F;if(Q.length>0){if(this.memoryOpt&&this.videoSegmnents&&!(h=this.getFramePosByIdx("video",Q[0])))throw Error("cannot found video frame #".concat(Q[0]));for(var a,X,p,C,T=h,G=T.frameIdx,i=T.segmentIdx,L=Q[0];L<=Q[1];L++){if(!this._videoSamples.length&&this.videoSegmnents){var s=this.getFrameInfo("video",i,G);a=s.sample,i=s.segmentIdx,G=s.frameIdx}else a=this._videoSamples[L];if(!a)throw Error("cannot found video frame #".concat(L));if(this.memoryOpt&&a.offset+a.size>b)break;a.offset>=F&&a.offset+a.size<=b&&(k=(p=a.offset-F)+a.size,X=U.subarray(p,k),(C=new l._("number"==typeof a.pts?a.pts:a.dts,a.dts)).duration=a.duration,C.gopId=a.gopId,C.sampleOffset=a.index,a.keyframe&&C.setToKeyframe(),C.data=X,C.size=a.size,N.samples.push(C))}N.samples.length>0&&(N.gopId=N.samples[0].gopId,N.baseMediaDecodeTime=N.samples[0].dts,N.startPts=N.samples[0].pts/N.timescale,N.endPts=N.samples[N.samples.length-1].pts/N.timescale,N.startDts=N.samples[0].dts/N.timescale,N.endDts=N.samples[N.samples.length-1].dts/N.timescale,this.videoSenc&&(N.videoSenc=this.videoSenc.slice(N.samples[0].sampleOffset,N.samples[0].sampleOffset+N.samples.length),N.kidValue=d))}if(B.length>0){if(this.memoryOpt&&this.audioSegmnents&&!(h=this.getFramePosByIdx("audio",B[0])))throw Error("cannot found video frame #".concat(B[0]));for(var y=h,t=y.frameIdx,Y=y.segmentIdx,D=B[0];D<=B[1];D++){if(!this._audioSamples.length&&this.audioSegmnents){var o=this.getFrameInfo("audio",Y,t);a=o.sample,Y=o.segmentIdx,t=o.frameIdx}else a=this._audioSamples[D];if(!a)throw Error("cannot found video frame #".concat(D));if(this.memoryOpt&&a.offset+a.size>b)break;a.offset>=F&&a.offset+a.size<=b&&(c=(p=a.offset-F)+a.size,X=U.subarray(p,c),m.samples.push(new Z.X(a.dts,X,a.duration,a.index)))}m.samples.length>0&&(m.gopId=m.samples[0].gopId||N.gopId,m.baseMediaDecodeTime=m.samples[0].dts,m.startPts=m.samples[0].pts/m.timescale,m.endPts=m.samples[m.samples.length-1].pts/m.timescale,this.audioSenc&&(m.audioSenc=this.audioSenc.slice(m.samples[0].sampleOffset,m.samples[0].sampleOffset+m.samples.length),m.kidValue=d))}this.decoderData(N,m,W);for(var e=0,M=0;M<N.samples.length;M++){for(var x=0,I=N.samples[M].data,K=I.length-1;x<K;)e=(0,J.Bh)(I,x),x+=4,N.samples[M].units.push(I.subarray(x,x+e)),x+=e}var u=Math.max(k,c);return this._lastRemainBuffer=U.subarray(u),this._lastRemainBuffer.byteLength>0?this._lastRemainBufferStartPos=F+U.byteLength-this._lastRemainBuffer.byteLength:this._lastRemainBufferStartPos=0,{videoTrack:N,audioTrack:m,metadataTrack:this.metadataTrack,lastRemainBufferInfo:{data:this._lastRemainBuffer,pos:this._lastRemainBufferStartPos}}}},{key:"setLastRemainBufferInfo",value:function(U,F){this._lastRemainBuffer=U,this._lastRemainBufferStartPos=F}},{key:"reset",value:function(){this._lastRemainBuffer=null,this._lastRemainBufferStartPos=0,this.videoTrack.reset(),this.audioTrack.reset(),this.metadataTrack.reset()}},{key:"decoderData",value:function(U,F,Q){!U.useEME&&!F.useEME&&n.Z.decoderAESCTRData(U,F,Q)}},{key:"getFramePosByIdx",value:function(U,F){var Q,B,R,V="video"===U?this.videoSegmnents:this.audioSegmnents;if(!V||!(null!=V&&V.length))return null;for(var l=0,Z=0;Z<V.length;Z++)if(Q=V[Z].frames,F<=(null===(B=V[Z].frames)||void 0===B?void 0:B[(null===(R=Q)||void 0===R?void 0:R.length)-1].index)){l=Z;break}return{frameIdx:Q.findIndex(function(U){return U.index===F}),segmentIdx:l}}},{key:"getFrameInfo",value:function(U,F,Q){var B,R,V,l,Z="video"===U?this.videoSegmnents:this.audioSegmnents;return Z?Q<(null===(B=Z[F])||void 0===B?void 0:null===(R=B.frames)||void 0===R?void 0:R.length)?{sample:null===(V=Z[F])||void 0===V?void 0:V.frames[Q],segmentIdx:F,frameIdx:Q+1}:{sample:null===(l=Z[F+1])||void 0===l?void 0:l.frames[0],segmentIdx:F+1,frameIdx:1}:{}}},{key:"clearBoxEntries",value:function(U){this.memoryOpt&&U.trak.forEach(function(U){E.forEach(function(F){var Q=U.mdia.minf.stbl[F];Q&&(Q.entries&&(Q.entries=null),Q.entrySizes&&(Q.entrySizes=null))})})}}],[{key:"probe",value:function(U){return W.I.probe(U)}}]),U}()}}]);